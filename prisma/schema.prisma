// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Services 
model Service {
  id             String           @id @default(uuid())
  title          String
  description    String
  price          Float
  type           ServiceType
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  formFields     Json 
  requests       ServiceRequest[]
  paymentMethods PaymentMethod[] 

  @@map("services")
}

// Service Requests
model ServiceRequest {
  id            String            @id @default(uuid())
  serviceId     String
  userId        String
  formData      Json 
  status        RequestStatus     @default(PENDING)
  paymentMethod PaymentMethodType
  paymentStatus PaymentStatus     @default(PENDING)
  amount        Float
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt

  service Service @relation(fields: [serviceId], references: [id])

  @@map("service_requests")
}

// Available Payment Methods for Services
model PaymentMethod {
  id        String            @id @default(uuid())
  type      PaymentMethodType
  serviceId String
  name      String
  enabled   Boolean           @default(true)

  service Service @relation(fields: [serviceId], references: [id])

  @@map("payment_methods")
}

enum ServiceType {
  BANKING
  IREMBO
  WRITING
}

enum RequestStatus {
  PENDING
  PROCESSING
  COMPLETED
  CANCELLED
}

enum PaymentMethodType {
  MTN_MONEY
  AIRTEL_MONEY
  BANK_TRANSFER
  CARD
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
  REFUNDED
}
